{"version":3,"sources":["components/staticElements.module.css","components/contactsItem/ContactsItem.module.css","components/filter/Filter.module.css","components/buttons/Button.module.css","components/contactForm/ContactForm.module.css","components/contactList/slide.module.css","components/contactList/ContactList.module.css","components/logo/Logo.module.css","components/container/Container.module.css","components/notofication/Notification.module.css","components/notofication/slide.module.css","components/slideAppear.module.css","components/filter/pop.module.css","components/buttons/ButtonAdd.js","components/custonInput/CustomInput.js","components/contactForm/ContactForm.js","components/buttons/ButtonRemove.js","components/contactsItem/ContactsItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/logo/Logo.js","components/container/Container.js","components/notofication/Notification.js","components/App.js","index.js"],"names":["module","exports","ButtonAdd","type","className","styles","Button","useStyles","makeStyles","theme","root","width","textTransform","margin","spacing","CustomInput","name","handleChange","value","classes","TextField","id","uuidv4","variant","label","onChange","ContactForm","state","number","target","setState","handleSubmitForm","event","preventDefault","contact","props","onAddContact","onSubmit","this","form","required","React","Component","minWidth","ButtonRemove","onClick","data-id","color","ContactsItem","onRemoveContact","ListItem","Text","Number","e","currentTarget","dataset","ContactsList","contacts","isMounted","TransitionGroup","component","List","map","el","CSSTransition","appear","in","length","timeout","classNames","staticStyles","slideStyles","unmountOnExit","Filter","onChangeFilter","FilterWrap","Label","Logo","logo","Container","children","container","Notification","pop","App","filter","error","isMountedfilter","addContact","newContact","find","setTimeout","prevState","removeContact","contactId","contactsInLS","localStorage","getItem","savedContactsInLS","JSON","parse","prevProps","setItem","stringify","filteredContacts","toLowerCase","includes","slideLogoAppear","staticElements","popFilterStyles","slideNotiAppear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96dcc4be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"staticElements_appear__2HrFi\",\"appearActive\":\"staticElements_appearActive__3Sd-r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListItem\":\"ContactsItem_ListItem__3fH5z\",\"Text\":\"ContactsItem_Text__3kz57\",\"Number\":\"ContactsItem_Number__2hxVi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterWrap\":\"Filter_FilterWrap__182ml\",\"Label\":\"Filter_Label__1LG2X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1fV1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__36ZFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__tvd4m\",\"enterActive\":\"slide_enterActive__2WdFn\",\"exit\":\"slide_exit__g153o\",\"exitActive\":\"slide_exitActive__3x-Yh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__3fyid\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__2UYc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1e7Fh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pop\":\"Notification_pop__2VXdg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__3yQUE\",\"enterActive\":\"slide_enterActive__18HKA\",\"exit\":\"slide_exit__1jPy1\",\"exitActive\":\"slide_exitActive__2efNe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"slideAppear_appear__1YOLo\",\"appearActive\":\"slideAppear_appearActive__2YvGC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__3e4dp\",\"enterActive\":\"pop_enterActive__3JsAu\",\"exit\":\"pop_exit__19NgS\",\"exitActive\":\"pop_exitActive__6jbd2\"};","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\nexport function ButtonAdd() {\r\n  return (\r\n    <button type=\"submit\" className={styles.Button}>\r\n      ADD\r\n    </button>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    textTransform: 'capitalize',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function CustomInput({ name, handleChange, value, type }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <TextField\r\n        id={uuidv4()}\r\n        variant=\"outlined\"\r\n        value={value}\r\n        label={name}\r\n        name={name}\r\n        type={type}\r\n        onChange={handleChange}\r\n        classes={classes}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nCustomInput.propTypes = {\r\n  name: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ButtonAdd } from '../buttons/ButtonAdd';\r\nimport { CustomInput } from '../custonInput/CustomInput';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport class ContactForm extends React.Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target: { value, name } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmitForm = event => {\r\n    event.preventDefault();\r\n    const contact = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      id: uuidv4(),\r\n    };\r\n    this.props.onAddContact(contact);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmitForm} className={styles.form}>\r\n          <CustomInput\r\n            label=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            handleChange={this.handleChange}\r\n            required\r\n          />\r\n          <CustomInput\r\n            label=\"number\"\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={this.state.number}\r\n            handleChange={this.handleChange}\r\n            required\r\n          />\r\n\r\n          <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      minWidth: '0',\r\n    },\r\n  },\r\n}));\r\n\r\nexport function ButtonRemove({ type, id, onClick }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Button\r\n      type={type}\r\n      data-id={id}\r\n      onClick={onClick}\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      classes={classes}\r\n    >\r\n      &#10006;\r\n    </Button>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ButtonRemove } from '../buttons/ButtonRemove';\r\n\r\nimport styles from './ContactsItem.module.css';\r\n\r\nexport function ContactsItem({\r\n  contact: { name, number, id },\r\n  onRemoveContact,\r\n}) {\r\n  const handleClick = e => onRemoveContact(e.currentTarget.dataset.id);\r\n\r\n  return (\r\n    <li className={styles.ListItem}>\r\n      <span className={styles.Text}>{name}: </span>\r\n      <span className={styles.Number}>{number}</span>\r\n      <ButtonRemove type=\"button\" id={id} onClick={handleClick} />\r\n    </li>\r\n  );\r\n}\r\n\r\nContactsItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { ContactsItem } from '../contactsItem/ContactsItem';\r\nimport slideStyles from './slide.module.css';\r\nimport staticStyles from '../staticElements.module.css';\r\nimport styles from './ContactList.module.css';\r\n\r\nexport function ContactsList({ contacts, onRemoveContact, isMounted }) {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.List}>\r\n      {contacts.map(el => (\r\n        <CSSTransition\r\n          appear={isMounted}\r\n          in={isMounted || contacts.length > 0}\r\n          key={el.id}\r\n          timeout={250}\r\n          classNames={isMounted ? staticStyles : slideStyles}\r\n          unmountOnExit\r\n        >\r\n          <ContactsItem\r\n            key={el.id}\r\n            contact={el}\r\n            onRemoveContact={onRemoveContact}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CustomInput } from '../custonInput/CustomInput';\r\nimport styles from './Filter.module.css';\r\n\r\nexport function Filter({ value, onChangeFilter }) {\r\n  const handleChange = event => onChangeFilter(event.target.value);\r\n  return (\r\n    <div className={styles.FilterWrap}>\r\n      <label className={styles.Label}>\r\n        Find contacts by name\r\n        <CustomInput type=\"search\" value={value} handleChange={handleChange} />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport styles from './Logo.module.css';\r\n\r\nexport function Logo() {\r\n  return <h1 className={styles.logo}>Phonebook</h1>;\r\n}","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nexport function Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}","import React from 'react';\r\nimport styles from './Notification.module.css';\r\n\r\nexport function Notification() {\r\n  return <div className={styles.pop}>Contact is already exists!!!</div>;\r\n}","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { ContactForm } from './contactForm/ContactForm';\r\nimport { ContactsList } from './contactList/ContactList';\r\nimport { Filter } from './filter/Filter';\r\nimport { Logo } from './logo/Logo';\r\nimport { Container } from './container/Container';\r\nimport { Notification } from './notofication/Notification';\r\nimport slideNotiAppear from './notofication/slide.module.css';\r\nimport slideLogoAppear from './slideAppear.module.css';\r\nimport popFilterStyles from './filter/pop.module.css';\r\nimport staticElements from './staticElements.module.css';\r\n\r\nexport class App extends React.Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n    error: false,\r\n    isMountedfilter: false,\r\n    isMounted: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contactsInLS = localStorage.getItem('contacts');\r\n    if (contactsInLS) {\r\n      const savedContactsInLS = JSON.parse(contactsInLS);\r\n      this.setState({\r\n        contacts: savedContactsInLS,\r\n      });\r\n      this.setState({\r\n        isMounted: true,\r\n      });\r\n      if (savedContactsInLS.length > 1) {\r\n        this.setState({\r\n          isMountedfilter: true,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n      this.setState({\r\n        isMounted: false,\r\n        isMountedfilter: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  addContact = newContact => {\r\n    if (this.state.contacts.find(contact => contact.name === newContact.name)) {\r\n      this.setState({ error: true });\r\n      setTimeout(() => {\r\n        this.setState({ error: false });\r\n      }, 2500);\r\n    } else {\r\n      this.setState(prevState => {\r\n        return {\r\n          contacts: [...prevState.contacts, newContact],\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  removeContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const contacts = this.state.contacts;\r\n    const filter = this.state.filter;\r\n    const isMounted = this.state.isMounted;\r\n    const isMountedfilter = this.state.isMountedfilter;\r\n    const filteredContacts = contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter),\r\n    );\r\n    return (\r\n      <>\r\n        <Container>\r\n          <CSSTransition\r\n            in\r\n            appear\r\n            timeout={500}\r\n            classNames={slideLogoAppear}\r\n            unmountOnExit\r\n          >\r\n            <Logo />\r\n          </CSSTransition>\r\n\r\n          <ContactForm onAddContact={this.addContact}></ContactForm>\r\n\r\n          <CSSTransition\r\n            in={isMountedfilter || contacts.length > 1}\r\n            appear={isMountedfilter}\r\n            timeout={250}\r\n            classNames={isMountedfilter ? staticElements : popFilterStyles}\r\n            unmountOnExit\r\n          >\r\n            <Filter value={filter} onChangeFilter={this.onChangeFilter} />\r\n          </CSSTransition>\r\n\r\n          {contacts.length < 1 && <p>You have no contacts yet</p>}\r\n\r\n          <ContactsList\r\n            contacts={filteredContacts}\r\n            onRemoveContact={this.removeContact}\r\n            isMounted={isMounted}\r\n          ></ContactsList>\r\n          <CSSTransition\r\n            in={this.state.error}\r\n            timeout={250}\r\n            classNames={slideNotiAppear}\r\n            unmountOnExit\r\n          >\r\n            <Notification />\r\n          </CSSTransition>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}","  \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}